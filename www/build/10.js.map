{"version":3,"sources":["../../src/pages/method.selection/method.selection.ts","../../src/pages/method.selection/method.selection.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyD;AAEA;AAErB;AACyB;AAkH7D,IAAa,mBAAmB;IAY9B,6BAAmB,OAAsB,EAC/B,KAAsB,EACtB,aAA4B;QAFnB,YAAO,GAAP,OAAO,CAAe;QAC/B,UAAK,GAAL,KAAK,CAAiB;QACtB,kBAAa,GAAb,aAAa,CAAe;QATtC,gBAAW,GAAW,YAAY,CAAC;QACnC,gBAAW,GAAW,YAAY,CAAC;QACnC,eAAU,GAAG,IAAI,CAAC;QAClB,sBAAiB,GAAW,mDAAmD,CAAC;QAChF,wBAAmB,GAAW,oBAAoB,CAAC;QACnD,wBAAmB,GAAW,oBAAoB,CAAC;QAKjD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,CAAC,WAAW,EAApB,CAAoB,CAAC,CAAC;QACjE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,CAAC,WAAW,EAApB,CAAoB,CAAC,CAAC;QACjE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,CAAC,gBAAgB,EAAzB,CAAyB,CAAC,CAAC;IAG7E,CAAC;IAGD,sCAAQ,GAAR,UAAS,IAAY;QACnB,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;YACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACxC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE;gBACtC,IAAI,EAAE,IAAI;aACX,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEH,0BAAC;AAAD,CAAC;AAlCY,mBAAmB;IA9G/B,gEAAS,EAAE;IACX,wDAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,QAAQ,EAAE,okJAyGT;KACF,CAAC;qCAa4B,oEAAa;QACxB,0DAAK;QACG,8EAAa;GAd3B,mBAAmB,CAkC/B;AAlC+B;;;;;;;;;;;;ACvHS;AACO;AACO;AAOvD,IAAa,yBAAyB;IAAtC;IAAyC,CAAC;IAAD,gCAAC;AAAD,CAAC;AAA7B,yBAAyB;IALrC,+EAAQ,CAAC;QACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;QACnC,OAAO,EAAE,CAAC,8FAAe,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QACxD,eAAe,EAAE,CAAC,mBAAmB,CAAC;KACvC,CAAC;GACW,yBAAyB,CAAI;AAAJ","file":"10.js","sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\n\nimport { NavController, IonicPage } from 'ionic-angular';\nimport { AppState } from \"../../models/state.model\";\nimport { Store } from \"@ngrx/store\";\nimport { RecommActions } from \"../../actions/recomm.actions\";\nimport { Observable } from \"rxjs/Observable\";\nimport { captureState } from \"../../utils/common.util\";\n\n@IonicPage()\n@Component({\n  selector: 'page-method-selection',\n  template: `\n    <ion-header>\n      <ion-navbar color=\"sky\">\n        <button ion-button menuToggle>\n          <ion-icon name=\"menu\"></ion-icon>\n        </button>\n        <ion-title>\n          Model Rekomendasi\n        </ion-title>\n      </ion-navbar>\n    </ion-header>\n    <ion-content>\n      <h6 ion-text style=\"padding: 10px; text-align: center; font-size: small;\" color=\"ocean\" class=\"highlight\">\n        Aplikasi ini menggunakan dua model interaksi<br>\n        untuk merekomendasikan destinasi wisata. <br>\n        Mohon kesediannya untuk mencoba <br> \n        kedua model interaksi ini.\n      </h6>\n      <ion-grid>\n        <ion-row>\n          <ion-col col-6>\n            <ion-card>\n              <ion-card-content>\n                Model 1\n              </ion-card-content>\n              <ion-row no-padding>\n                <ion-col text-left>\n                  <button (click)=\"navigate(1)\" color=\"fire\" ion-button icon-right>\n                    Mulai Model 1\n                  </button>\n                </ion-col>\n              </ion-row>\n              <ion-row padding>\n                <ion-col text-left *ngIf=\"(statusMode1$ | async) == 'incomplete'\">\n                  <p class=\"incomplete\"><ion-icon name=\"close-circle\"></ion-icon>\n                  Belum diselesaikan</p>\n                </ion-col>\n                <ion-col text-left *ngIf=\"(statusMode1$ | async) == 'completed'\">\n                  <p class=\"complete\"><ion-icon name=\"checkmark-circle\"></ion-icon>\n                  Sudah diselesaikan</p>\n                </ion-col>\n              </ion-row>\n            </ion-card>\n          </ion-col>\n          <ion-col col-6>\n            <ion-card>\n              <ion-card-content>\n                Model 2\n              </ion-card-content>\n              <ion-row no-padding>\n                <ion-col text-left>\n                  <button (click)=\"navigate(2)\" color=\"fire\" ion-button icon-right>\n                    Mulai Model 2\n                  </button>\n                </ion-col>\n              </ion-row>\n              <ion-row padding>\n                <ion-col text-left *ngIf=\"(statusMode2$ | async) == 'incomplete'\">\n                  <p class=\"incomplete\"><ion-icon name=\"close-circle\"></ion-icon>\n                  Belum diselesaikan</p>\n                </ion-col>\n                <ion-col text-left *ngIf=\"(statusMode2$ | async) == 'completed'\">\n                  <p class=\"complete\"><ion-icon name=\"checkmark-circle\"></ion-icon>\n                  Sudah diselesaikan</p>\n                </ion-col>\n              </ion-row>\n            </ion-card>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n          <ion-col col-12>\n            <ion-card style=\"text-align: center\">\n              <ion-card-content>\n                  <h6 ion-text style=\"padding: 10px; \n                    text-align: center; \n                    font-size: small;\" \n                    color=\"ocean\" \n                    class=\"highlight\">\n                    Mohon isi survei dibawah ini, survei tentang perbandingan kedua model diatas. <br>\n                    <p *ngIf=\"(statusMode1$ | async) != 'completed' || (statusMode2$ | async) != 'completed'\"><i>Anda harus menjalankan kedua model diatas terlebih dahulu.</i></p>\n                  </h6>\n                  <button [disabled]=\"!((statusMode1$ | async) == 'completed' && (statusMode2$ | async) == 'completed')\" (click)=\"navigate(3)\" color=\"fire\" ion-button icon-right>\n                    Survei Perbandingan Model\n                  </button>\n\n              </ion-card-content>\n\n              <ion-row padding>\n                <ion-col text-left *ngIf=\"(statusComparison$ | async) == 'incomplete'\">\n                  <p style=\"text-align: center\" class=\"incomplete\"><ion-icon name=\"close-circle\"></ion-icon>\n                    Belum diselesaikan</p>\n                </ion-col>\n                <ion-col text-left *ngIf=\"(statusComparison$ | async) == 'completed'\">\n                  <p style=\"text-align: center\" class=\"complete\"><ion-icon name=\"checkmark-circle\"></ion-icon>\n                    Sudah diselesaikan</p>\n                </ion-col>\n              </ion-row>\n            </ion-card>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n      <!--<p style=\"text-align: center; padding: 10px;\" *ngIf=\"(statusMode1$ | async) == 'completed' && (statusMode2$ | async) == 'completed'\">-->\n        <!--Terimakasih karena telah menjalankan dan mengisi survey pada kedua model diatas!-->\n      <!--</p>-->\n    </ion-content>\n  `\n})\nexport class MethodSelectionPage {\n\n  statusMode1$: Observable<string>;\n  statusMode2$: Observable<string>;\n  statusComparison$: Observable<string>;\n  statusMode1: string = \"incomplete\";\n  statusMode2: string = \"incomplete\";\n  incomplete = true;\n  comparisonCaption: string = \"Mohon jalankan kedua model diatas terlebih dahulu\";\n  model1StatusCaption: string = \"Belum diselesaikan\";\n  model2StatusCaption: string = \"Belum diselesaikan\";\n\n  constructor(public navCtrl: NavController,\n    private store: Store<AppState>,\n    private recommActions: RecommActions) {\n    this.statusMode1$ = this.store.select(s => s.recomm.statusMode1);\n    this.statusMode2$ = this.store.select(s => s.recomm.statusMode2);\n    this.statusComparison$ = this.store.select(s => s.recomm.statusComparison);\n\n\n  }\n\n\n  navigate(mode: number) {\n    if (mode == 3)\n      this.navCtrl.push('PostFeedbackPage');\n    else {\n      this.store.dispatch(this.recommActions.setMode(mode));\n      this.navCtrl.push('RecommendationPage', {\n        mode: mode\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/method.selection/method.selection.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport {MethodSelectionPage} from \"./method.selection\";\n\n@NgModule({\n  declarations: [MethodSelectionPage],\n  imports: [IonicPageModule.forChild(MethodSelectionPage)],\n  entryComponents: [MethodSelectionPage]\n})\nexport class MethodSelectionPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/method.selection/method.selection.module.ts"],"sourceRoot":""}